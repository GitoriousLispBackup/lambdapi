/*
    Ypsilon Scheme System
    Copyright (c) 2004-2009 Y.FUJITA / LittleWing Company Limited.
    See license.txt for terms and conditions of use
*/

void add(const reg8_t& dst, const reg8_t& src);
void add(const mem8_t& dst, const reg8_t& src);
void add(const mem8si_t& dst, const reg8_t& src);
void add(const reg32_t& dst, const reg32_t& src);
void add(const mem32_t& dst, const reg32_t& src);
void add(const mem32si_t& dst, const reg32_t& src);
void add(const reg64_t& dst, const reg64_t& src);
void add(const mem64_t& dst, const reg64_t& src);
void add(const mem64si_t& dst, const reg64_t& src);
void add(const reg8_t& dst, const mem8_t& src);
void add(const reg8_t& dst, const mem8si_t& src);
void add(const reg32_t& dst, const mem32_t& src);
void add(const reg32_t& dst, const mem32si_t& src);
void add(const reg64_t& dst, const mem64_t& src);
void add(const reg64_t& dst, const mem64si_t& src);
void add(const reg8_t& dst, int8_t imm8);
void add(const reg32_t& dst, int32_t imm32);
void add(const reg64_t& dst, int32_t imm32);
void add(const mem8_t& dst, int8_t imm8);
void add(const mem8si_t& dst, int8_t imm8);
void add(const mem32_t& dst, int32_t imm32);
void add(const mem32si_t& dst, int32_t imm32);
void add(const mem64_t& dst, int32_t imm32);
void add(const mem64si_t& dst, int32_t imm32);
void or_(const reg8_t& dst, const reg8_t& src);
void or_(const mem8_t& dst, const reg8_t& src);
void or_(const mem8si_t& dst, const reg8_t& src);
void or_(const reg32_t& dst, const reg32_t& src);
void or_(const mem32_t& dst, const reg32_t& src);
void or_(const mem32si_t& dst, const reg32_t& src);
void or_(const reg64_t& dst, const reg64_t& src);
void or_(const mem64_t& dst, const reg64_t& src);
void or_(const mem64si_t& dst, const reg64_t& src);
void or_(const reg8_t& dst, const mem8_t& src);
void or_(const reg8_t& dst, const mem8si_t& src);
void or_(const reg32_t& dst, const mem32_t& src);
void or_(const reg32_t& dst, const mem32si_t& src);
void or_(const reg64_t& dst, const mem64_t& src);
void or_(const reg64_t& dst, const mem64si_t& src);
void or_(const reg8_t& dst, int8_t imm8);
void or_(const reg32_t& dst, int32_t imm32);
void or_(const reg64_t& dst, int32_t imm32);
void or_(const mem8_t& dst, int8_t imm8);
void or_(const mem8si_t& dst, int8_t imm8);
void or_(const mem32_t& dst, int32_t imm32);
void or_(const mem32si_t& dst, int32_t imm32);
void or_(const mem64_t& dst, int32_t imm32);
void or_(const mem64si_t& dst, int32_t imm32);
void adc(const reg8_t& dst, const reg8_t& src);
void adc(const mem8_t& dst, const reg8_t& src);
void adc(const mem8si_t& dst, const reg8_t& src);
void adc(const reg32_t& dst, const reg32_t& src);
void adc(const mem32_t& dst, const reg32_t& src);
void adc(const mem32si_t& dst, const reg32_t& src);
void adc(const reg64_t& dst, const reg64_t& src);
void adc(const mem64_t& dst, const reg64_t& src);
void adc(const mem64si_t& dst, const reg64_t& src);
void adc(const reg8_t& dst, const mem8_t& src);
void adc(const reg8_t& dst, const mem8si_t& src);
void adc(const reg32_t& dst, const mem32_t& src);
void adc(const reg32_t& dst, const mem32si_t& src);
void adc(const reg64_t& dst, const mem64_t& src);
void adc(const reg64_t& dst, const mem64si_t& src);
void adc(const reg8_t& dst, int8_t imm8);
void adc(const reg32_t& dst, int32_t imm32);
void adc(const reg64_t& dst, int32_t imm32);
void adc(const mem8_t& dst, int8_t imm8);
void adc(const mem8si_t& dst, int8_t imm8);
void adc(const mem32_t& dst, int32_t imm32);
void adc(const mem32si_t& dst, int32_t imm32);
void adc(const mem64_t& dst, int32_t imm32);
void adc(const mem64si_t& dst, int32_t imm32);
void sbb(const reg8_t& dst, const reg8_t& src);
void sbb(const mem8_t& dst, const reg8_t& src);
void sbb(const mem8si_t& dst, const reg8_t& src);
void sbb(const reg32_t& dst, const reg32_t& src);
void sbb(const mem32_t& dst, const reg32_t& src);
void sbb(const mem32si_t& dst, const reg32_t& src);
void sbb(const reg64_t& dst, const reg64_t& src);
void sbb(const mem64_t& dst, const reg64_t& src);
void sbb(const mem64si_t& dst, const reg64_t& src);
void sbb(const reg8_t& dst, const mem8_t& src);
void sbb(const reg8_t& dst, const mem8si_t& src);
void sbb(const reg32_t& dst, const mem32_t& src);
void sbb(const reg32_t& dst, const mem32si_t& src);
void sbb(const reg64_t& dst, const mem64_t& src);
void sbb(const reg64_t& dst, const mem64si_t& src);
void sbb(const reg8_t& dst, int8_t imm8);
void sbb(const reg32_t& dst, int32_t imm32);
void sbb(const reg64_t& dst, int32_t imm32);
void sbb(const mem8_t& dst, int8_t imm8);
void sbb(const mem8si_t& dst, int8_t imm8);
void sbb(const mem32_t& dst, int32_t imm32);
void sbb(const mem32si_t& dst, int32_t imm32);
void sbb(const mem64_t& dst, int32_t imm32);
void sbb(const mem64si_t& dst, int32_t imm32);
void and_(const reg8_t& dst, const reg8_t& src);
void and_(const mem8_t& dst, const reg8_t& src);
void and_(const mem8si_t& dst, const reg8_t& src);
void and_(const reg32_t& dst, const reg32_t& src);
void and_(const mem32_t& dst, const reg32_t& src);
void and_(const mem32si_t& dst, const reg32_t& src);
void and_(const reg64_t& dst, const reg64_t& src);
void and_(const mem64_t& dst, const reg64_t& src);
void and_(const mem64si_t& dst, const reg64_t& src);
void and_(const reg8_t& dst, const mem8_t& src);
void and_(const reg8_t& dst, const mem8si_t& src);
void and_(const reg32_t& dst, const mem32_t& src);
void and_(const reg32_t& dst, const mem32si_t& src);
void and_(const reg64_t& dst, const mem64_t& src);
void and_(const reg64_t& dst, const mem64si_t& src);
void and_(const reg8_t& dst, int8_t imm8);
void and_(const reg32_t& dst, int32_t imm32);
void and_(const reg64_t& dst, int32_t imm32);
void and_(const mem8_t& dst, int8_t imm8);
void and_(const mem8si_t& dst, int8_t imm8);
void and_(const mem32_t& dst, int32_t imm32);
void and_(const mem32si_t& dst, int32_t imm32);
void and_(const mem64_t& dst, int32_t imm32);
void and_(const mem64si_t& dst, int32_t imm32);
void sub(const reg8_t& dst, const reg8_t& src);
void sub(const mem8_t& dst, const reg8_t& src);
void sub(const mem8si_t& dst, const reg8_t& src);
void sub(const reg32_t& dst, const reg32_t& src);
void sub(const mem32_t& dst, const reg32_t& src);
void sub(const mem32si_t& dst, const reg32_t& src);
void sub(const reg64_t& dst, const reg64_t& src);
void sub(const mem64_t& dst, const reg64_t& src);
void sub(const mem64si_t& dst, const reg64_t& src);
void sub(const reg8_t& dst, const mem8_t& src);
void sub(const reg8_t& dst, const mem8si_t& src);
void sub(const reg32_t& dst, const mem32_t& src);
void sub(const reg32_t& dst, const mem32si_t& src);
void sub(const reg64_t& dst, const mem64_t& src);
void sub(const reg64_t& dst, const mem64si_t& src);
void sub(const reg8_t& dst, int8_t imm8);
void sub(const reg32_t& dst, int32_t imm32);
void sub(const reg64_t& dst, int32_t imm32);
void sub(const mem8_t& dst, int8_t imm8);
void sub(const mem8si_t& dst, int8_t imm8);
void sub(const mem32_t& dst, int32_t imm32);
void sub(const mem32si_t& dst, int32_t imm32);
void sub(const mem64_t& dst, int32_t imm32);
void sub(const mem64si_t& dst, int32_t imm32);
void xor_(const reg8_t& dst, const reg8_t& src);
void xor_(const mem8_t& dst, const reg8_t& src);
void xor_(const mem8si_t& dst, const reg8_t& src);
void xor_(const reg32_t& dst, const reg32_t& src);
void xor_(const mem32_t& dst, const reg32_t& src);
void xor_(const mem32si_t& dst, const reg32_t& src);
void xor_(const reg64_t& dst, const reg64_t& src);
void xor_(const mem64_t& dst, const reg64_t& src);
void xor_(const mem64si_t& dst, const reg64_t& src);
void xor_(const reg8_t& dst, const mem8_t& src);
void xor_(const reg8_t& dst, const mem8si_t& src);
void xor_(const reg32_t& dst, const mem32_t& src);
void xor_(const reg32_t& dst, const mem32si_t& src);
void xor_(const reg64_t& dst, const mem64_t& src);
void xor_(const reg64_t& dst, const mem64si_t& src);
void xor_(const reg8_t& dst, int8_t imm8);
void xor_(const reg32_t& dst, int32_t imm32);
void xor_(const reg64_t& dst, int32_t imm32);
void xor_(const mem8_t& dst, int8_t imm8);
void xor_(const mem8si_t& dst, int8_t imm8);
void xor_(const mem32_t& dst, int32_t imm32);
void xor_(const mem32si_t& dst, int32_t imm32);
void xor_(const mem64_t& dst, int32_t imm32);
void xor_(const mem64si_t& dst, int32_t imm32);
void cmp(const reg8_t& dst, const reg8_t& src);
void cmp(const mem8_t& dst, const reg8_t& src);
void cmp(const mem8si_t& dst, const reg8_t& src);
void cmp(const reg32_t& dst, const reg32_t& src);
void cmp(const mem32_t& dst, const reg32_t& src);
void cmp(const mem32si_t& dst, const reg32_t& src);
void cmp(const reg64_t& dst, const reg64_t& src);
void cmp(const mem64_t& dst, const reg64_t& src);
void cmp(const mem64si_t& dst, const reg64_t& src);
void cmp(const reg8_t& dst, const mem8_t& src);
void cmp(const reg8_t& dst, const mem8si_t& src);
void cmp(const reg32_t& dst, const mem32_t& src);
void cmp(const reg32_t& dst, const mem32si_t& src);
void cmp(const reg64_t& dst, const mem64_t& src);
void cmp(const reg64_t& dst, const mem64si_t& src);
void cmp(const reg8_t& dst, int8_t imm8);
void cmp(const reg32_t& dst, int32_t imm32);
void cmp(const reg64_t& dst, int32_t imm32);
void cmp(const mem8_t& dst, int8_t imm8);
void cmp(const mem8si_t& dst, int8_t imm8);
void cmp(const mem32_t& dst, int32_t imm32);
void cmp(const mem32si_t& dst, int32_t imm32);
void cmp(const mem64_t& dst, int32_t imm32);
void cmp(const mem64si_t& dst, int32_t imm32);
void rol(const reg8_t& dst, int8_t imm8);
void rol(const mem8_t& dst, int8_t imm8);
void rol(const mem8si_t& dst, int8_t imm8);
void rol(const reg32_t& dst, int8_t imm8);
void rol(const mem32_t& dst, int8_t imm8);
void rol(const mem32si_t& dst, int8_t imm8);
void rol(const reg64_t& dst, int8_t imm8);
void rol(const mem64_t& dst, int8_t imm8);
void rol(const mem64si_t& dst, int8_t imm8);
void rol(const reg8_t& dst, const reg8_t& src);
void rol(const mem8_t& dst, const reg8_t& src);
void rol(const mem8si_t& dst, const reg8_t& src);
void rol(const reg32_t& dst, const reg8_t& src);
void rol(const mem32_t& dst, const reg8_t& src);
void rol(const mem32si_t& dst, const reg8_t& src);
void rol(const reg64_t& dst, const reg8_t& src);
void rol(const mem64_t& dst, const reg8_t& src);
void rol(const mem64si_t& dst, const reg8_t& src);
void ror(const reg8_t& dst, int8_t imm8);
void ror(const mem8_t& dst, int8_t imm8);
void ror(const mem8si_t& dst, int8_t imm8);
void ror(const reg32_t& dst, int8_t imm8);
void ror(const mem32_t& dst, int8_t imm8);
void ror(const mem32si_t& dst, int8_t imm8);
void ror(const reg64_t& dst, int8_t imm8);
void ror(const mem64_t& dst, int8_t imm8);
void ror(const mem64si_t& dst, int8_t imm8);
void ror(const reg8_t& dst, const reg8_t& src);
void ror(const mem8_t& dst, const reg8_t& src);
void ror(const mem8si_t& dst, const reg8_t& src);
void ror(const reg32_t& dst, const reg8_t& src);
void ror(const mem32_t& dst, const reg8_t& src);
void ror(const mem32si_t& dst, const reg8_t& src);
void ror(const reg64_t& dst, const reg8_t& src);
void ror(const mem64_t& dst, const reg8_t& src);
void ror(const mem64si_t& dst, const reg8_t& src);
void rcl(const reg8_t& dst, int8_t imm8);
void rcl(const mem8_t& dst, int8_t imm8);
void rcl(const mem8si_t& dst, int8_t imm8);
void rcl(const reg32_t& dst, int8_t imm8);
void rcl(const mem32_t& dst, int8_t imm8);
void rcl(const mem32si_t& dst, int8_t imm8);
void rcl(const reg64_t& dst, int8_t imm8);
void rcl(const mem64_t& dst, int8_t imm8);
void rcl(const mem64si_t& dst, int8_t imm8);
void rcl(const reg8_t& dst, const reg8_t& src);
void rcl(const mem8_t& dst, const reg8_t& src);
void rcl(const mem8si_t& dst, const reg8_t& src);
void rcl(const reg32_t& dst, const reg8_t& src);
void rcl(const mem32_t& dst, const reg8_t& src);
void rcl(const mem32si_t& dst, const reg8_t& src);
void rcl(const reg64_t& dst, const reg8_t& src);
void rcl(const mem64_t& dst, const reg8_t& src);
void rcl(const mem64si_t& dst, const reg8_t& src);
void rcr(const reg8_t& dst, int8_t imm8);
void rcr(const mem8_t& dst, int8_t imm8);
void rcr(const mem8si_t& dst, int8_t imm8);
void rcr(const reg32_t& dst, int8_t imm8);
void rcr(const mem32_t& dst, int8_t imm8);
void rcr(const mem32si_t& dst, int8_t imm8);
void rcr(const reg64_t& dst, int8_t imm8);
void rcr(const mem64_t& dst, int8_t imm8);
void rcr(const mem64si_t& dst, int8_t imm8);
void rcr(const reg8_t& dst, const reg8_t& src);
void rcr(const mem8_t& dst, const reg8_t& src);
void rcr(const mem8si_t& dst, const reg8_t& src);
void rcr(const reg32_t& dst, const reg8_t& src);
void rcr(const mem32_t& dst, const reg8_t& src);
void rcr(const mem32si_t& dst, const reg8_t& src);
void rcr(const reg64_t& dst, const reg8_t& src);
void rcr(const mem64_t& dst, const reg8_t& src);
void rcr(const mem64si_t& dst, const reg8_t& src);
void shl(const reg8_t& dst, int8_t imm8);
void shl(const mem8_t& dst, int8_t imm8);
void shl(const mem8si_t& dst, int8_t imm8);
void shl(const reg32_t& dst, int8_t imm8);
void shl(const mem32_t& dst, int8_t imm8);
void shl(const mem32si_t& dst, int8_t imm8);
void shl(const reg64_t& dst, int8_t imm8);
void shl(const mem64_t& dst, int8_t imm8);
void shl(const mem64si_t& dst, int8_t imm8);
void shl(const reg8_t& dst, const reg8_t& src);
void shl(const mem8_t& dst, const reg8_t& src);
void shl(const mem8si_t& dst, const reg8_t& src);
void shl(const reg32_t& dst, const reg8_t& src);
void shl(const mem32_t& dst, const reg8_t& src);
void shl(const mem32si_t& dst, const reg8_t& src);
void shl(const reg64_t& dst, const reg8_t& src);
void shl(const mem64_t& dst, const reg8_t& src);
void shl(const mem64si_t& dst, const reg8_t& src);
void shr(const reg8_t& dst, int8_t imm8);
void shr(const mem8_t& dst, int8_t imm8);
void shr(const mem8si_t& dst, int8_t imm8);
void shr(const reg32_t& dst, int8_t imm8);
void shr(const mem32_t& dst, int8_t imm8);
void shr(const mem32si_t& dst, int8_t imm8);
void shr(const reg64_t& dst, int8_t imm8);
void shr(const mem64_t& dst, int8_t imm8);
void shr(const mem64si_t& dst, int8_t imm8);
void shr(const reg8_t& dst, const reg8_t& src);
void shr(const mem8_t& dst, const reg8_t& src);
void shr(const mem8si_t& dst, const reg8_t& src);
void shr(const reg32_t& dst, const reg8_t& src);
void shr(const mem32_t& dst, const reg8_t& src);
void shr(const mem32si_t& dst, const reg8_t& src);
void shr(const reg64_t& dst, const reg8_t& src);
void shr(const mem64_t& dst, const reg8_t& src);
void shr(const mem64si_t& dst, const reg8_t& src);
void sar(const reg8_t& dst, int8_t imm8);
void sar(const mem8_t& dst, int8_t imm8);
void sar(const mem8si_t& dst, int8_t imm8);
void sar(const reg32_t& dst, int8_t imm8);
void sar(const mem32_t& dst, int8_t imm8);
void sar(const mem32si_t& dst, int8_t imm8);
void sar(const reg64_t& dst, int8_t imm8);
void sar(const mem64_t& dst, int8_t imm8);
void sar(const mem64si_t& dst, int8_t imm8);
void sar(const reg8_t& dst, const reg8_t& src);
void sar(const mem8_t& dst, const reg8_t& src);
void sar(const mem8si_t& dst, const reg8_t& src);
void sar(const reg32_t& dst, const reg8_t& src);
void sar(const mem32_t& dst, const reg8_t& src);
void sar(const mem32si_t& dst, const reg8_t& src);
void sar(const reg64_t& dst, const reg8_t& src);
void sar(const mem64_t& dst, const reg8_t& src);
void sar(const mem64si_t& dst, const reg8_t& src);
void inc(const reg8_t& dst);
void inc(const reg32_t& dst);
void inc(const reg64_t& dst);
void inc(const mem8_t& dst);
void inc(const mem8si_t& dst);
void inc(const mem32_t& dst);
void inc(const mem32si_t& dst);
void inc(const mem64_t& dst);
void inc(const mem64si_t& dst);
void dec(const reg8_t& dst);
void dec(const reg32_t& dst);
void dec(const reg64_t& dst);
void dec(const mem8_t& dst);
void dec(const mem8si_t& dst);
void dec(const mem32_t& dst);
void dec(const mem32si_t& dst);
void dec(const mem64_t& dst);
void dec(const mem64si_t& dst);
void not_(const reg8_t& src);
void not_(const mem8_t& src);
void not_(const mem8si_t& src);
void not_(const reg32_t& src);
void not_(const mem32_t& src);
void not_(const mem32si_t& src);
void not_(const reg64_t& src);
void not_(const mem64_t& src);
void not_(const mem64si_t& src);
void neg(const reg8_t& src);
void neg(const mem8_t& src);
void neg(const mem8si_t& src);
void neg(const reg32_t& src);
void neg(const mem32_t& src);
void neg(const mem32si_t& src);
void neg(const reg64_t& src);
void neg(const mem64_t& src);
void neg(const mem64si_t& src);
void mul(const reg8_t& src);
void mul(const mem8_t& src);
void mul(const mem8si_t& src);
void mul(const reg32_t& src);
void mul(const mem32_t& src);
void mul(const mem32si_t& src);
void mul(const reg64_t& src);
void mul(const mem64_t& src);
void mul(const mem64si_t& src);
void imul(const reg8_t& dst);
void imul(const mem8_t& dst);
void imul(const mem8si_t& dst);
void imul(const reg32_t& dst);
void imul(const mem32_t& dst);
void imul(const mem32si_t& dst);
void imul(const reg64_t& dst);
void imul(const mem64_t& dst);
void imul(const mem64si_t& dst);
void imul(const reg32_t& dst, const reg32_t& src, int32_t imm32);
void imul(const reg32_t& dst, const mem32_t& src, int32_t imm32);
void imul(const reg32_t& dst, const mem32si_t& src, int32_t imm32);
void imul(const reg32_t& dst, int32_t imm32);
void imul(const reg32_t& dst, const reg32_t& src);
void imul(const reg32_t& dst, const mem32_t& src);
void imul(const reg32_t& dst, const mem32si_t& src);
void imul(const reg64_t& dst, const reg64_t& src, int32_t imm32);
void imul(const reg64_t& dst, const mem64_t& src, int32_t imm32);
void imul(const reg64_t& dst, const mem64si_t& src, int32_t imm32);
void imul(const reg64_t& dst, int32_t imm32);
void imul(const reg64_t& dst, const reg64_t& src);
void imul(const reg64_t& dst, const mem64_t& src);
void imul(const reg64_t& dst, const mem64si_t& src);
void div(const reg8_t& src);
void div(const mem8_t& src);
void div(const mem8si_t& src);
void div(const reg32_t& src);
void div(const mem32_t& src);
void div(const mem32si_t& src);
void div(const reg64_t& src);
void div(const mem64_t& src);
void div(const mem64si_t& src);
void idiv(const reg8_t& src);
void idiv(const mem8_t& src);
void idiv(const mem8si_t& src);
void idiv(const reg32_t& src);
void idiv(const mem32_t& src);
void idiv(const mem32si_t& src);
void idiv(const reg64_t& src);
void idiv(const mem64_t& src);
void idiv(const mem64si_t& src);
void ja_short(const symbol_t& target);
void ja(const symbol_t& target);
void jae_short(const symbol_t& target);
void jae(const symbol_t& target);
void jb_short(const symbol_t& target);
void jb(const symbol_t& target);
void jbe_short(const symbol_t& target);
void jbe(const symbol_t& target);
void jc_short(const symbol_t& target);
void jc(const symbol_t& target);
void je_short(const symbol_t& target);
void je(const symbol_t& target);
void jg_short(const symbol_t& target);
void jg(const symbol_t& target);
void jge_short(const symbol_t& target);
void jge(const symbol_t& target);
void jl_short(const symbol_t& target);
void jl(const symbol_t& target);
void jle_short(const symbol_t& target);
void jle(const symbol_t& target);
void jna_short(const symbol_t& target);
void jna(const symbol_t& target);
void jnae_short(const symbol_t& target);
void jnae(const symbol_t& target);
void jnb_short(const symbol_t& target);
void jnb(const symbol_t& target);
void jnbe_short(const symbol_t& target);
void jnbe(const symbol_t& target);
void jnc_short(const symbol_t& target);
void jnc(const symbol_t& target);
void jne_short(const symbol_t& target);
void jne(const symbol_t& target);
void jng_short(const symbol_t& target);
void jng(const symbol_t& target);
void jnge_short(const symbol_t& target);
void jnge(const symbol_t& target);
void jnl_short(const symbol_t& target);
void jnl(const symbol_t& target);
void jnle_short(const symbol_t& target);
void jnle(const symbol_t& target);
void jno_short(const symbol_t& target);
void jno(const symbol_t& target);
void jnp_short(const symbol_t& target);
void jnp(const symbol_t& target);
void jns_short(const symbol_t& target);
void jns(const symbol_t& target);
void jnz_short(const symbol_t& target);
void jnz(const symbol_t& target);
void jo_short(const symbol_t& target);
void jo(const symbol_t& target);
void jp_short(const symbol_t& target);
void jp(const symbol_t& target);
void jpe_short(const symbol_t& target);
void jpe(const symbol_t& target);
void jpo_short(const symbol_t& target);
void jpo(const symbol_t& target);
void js_short(const symbol_t& target);
void js(const symbol_t& target);
void jz_short(const symbol_t& target);
void jz(const symbol_t& target);
void cmova(const reg32_t& dst, const reg32_t& src);
void cmova(const reg32_t& dst, const mem32_t& src);
void cmova(const reg32_t& dst, const mem32si_t& src);
void cmova(const reg64_t& dst, const reg64_t& src);
void cmova(const reg64_t& dst, const mem64_t& src);
void cmova(const reg64_t& dst, const mem64si_t& src);
void cmovae(const reg32_t& dst, const reg32_t& src);
void cmovae(const reg32_t& dst, const mem32_t& src);
void cmovae(const reg32_t& dst, const mem32si_t& src);
void cmovae(const reg64_t& dst, const reg64_t& src);
void cmovae(const reg64_t& dst, const mem64_t& src);
void cmovae(const reg64_t& dst, const mem64si_t& src);
void cmovb(const reg32_t& dst, const reg32_t& src);
void cmovb(const reg32_t& dst, const mem32_t& src);
void cmovb(const reg32_t& dst, const mem32si_t& src);
void cmovb(const reg64_t& dst, const reg64_t& src);
void cmovb(const reg64_t& dst, const mem64_t& src);
void cmovb(const reg64_t& dst, const mem64si_t& src);
void cmovbe(const reg32_t& dst, const reg32_t& src);
void cmovbe(const reg32_t& dst, const mem32_t& src);
void cmovbe(const reg32_t& dst, const mem32si_t& src);
void cmovbe(const reg64_t& dst, const reg64_t& src);
void cmovbe(const reg64_t& dst, const mem64_t& src);
void cmovbe(const reg64_t& dst, const mem64si_t& src);
void cmovc(const reg32_t& dst, const reg32_t& src);
void cmovc(const reg32_t& dst, const mem32_t& src);
void cmovc(const reg32_t& dst, const mem32si_t& src);
void cmovc(const reg64_t& dst, const reg64_t& src);
void cmovc(const reg64_t& dst, const mem64_t& src);
void cmovc(const reg64_t& dst, const mem64si_t& src);
void cmove(const reg32_t& dst, const reg32_t& src);
void cmove(const reg32_t& dst, const mem32_t& src);
void cmove(const reg32_t& dst, const mem32si_t& src);
void cmove(const reg64_t& dst, const reg64_t& src);
void cmove(const reg64_t& dst, const mem64_t& src);
void cmove(const reg64_t& dst, const mem64si_t& src);
void cmovg(const reg32_t& dst, const reg32_t& src);
void cmovg(const reg32_t& dst, const mem32_t& src);
void cmovg(const reg32_t& dst, const mem32si_t& src);
void cmovg(const reg64_t& dst, const reg64_t& src);
void cmovg(const reg64_t& dst, const mem64_t& src);
void cmovg(const reg64_t& dst, const mem64si_t& src);
void cmovge(const reg32_t& dst, const reg32_t& src);
void cmovge(const reg32_t& dst, const mem32_t& src);
void cmovge(const reg32_t& dst, const mem32si_t& src);
void cmovge(const reg64_t& dst, const reg64_t& src);
void cmovge(const reg64_t& dst, const mem64_t& src);
void cmovge(const reg64_t& dst, const mem64si_t& src);
void cmovl(const reg32_t& dst, const reg32_t& src);
void cmovl(const reg32_t& dst, const mem32_t& src);
void cmovl(const reg32_t& dst, const mem32si_t& src);
void cmovl(const reg64_t& dst, const reg64_t& src);
void cmovl(const reg64_t& dst, const mem64_t& src);
void cmovl(const reg64_t& dst, const mem64si_t& src);
void cmovle(const reg32_t& dst, const reg32_t& src);
void cmovle(const reg32_t& dst, const mem32_t& src);
void cmovle(const reg32_t& dst, const mem32si_t& src);
void cmovle(const reg64_t& dst, const reg64_t& src);
void cmovle(const reg64_t& dst, const mem64_t& src);
void cmovle(const reg64_t& dst, const mem64si_t& src);
void cmovna(const reg32_t& dst, const reg32_t& src);
void cmovna(const reg32_t& dst, const mem32_t& src);
void cmovna(const reg32_t& dst, const mem32si_t& src);
void cmovna(const reg64_t& dst, const reg64_t& src);
void cmovna(const reg64_t& dst, const mem64_t& src);
void cmovna(const reg64_t& dst, const mem64si_t& src);
void cmovnae(const reg32_t& dst, const reg32_t& src);
void cmovnae(const reg32_t& dst, const mem32_t& src);
void cmovnae(const reg32_t& dst, const mem32si_t& src);
void cmovnae(const reg64_t& dst, const reg64_t& src);
void cmovnae(const reg64_t& dst, const mem64_t& src);
void cmovnae(const reg64_t& dst, const mem64si_t& src);
void cmovnb(const reg32_t& dst, const reg32_t& src);
void cmovnb(const reg32_t& dst, const mem32_t& src);
void cmovnb(const reg32_t& dst, const mem32si_t& src);
void cmovnb(const reg64_t& dst, const reg64_t& src);
void cmovnb(const reg64_t& dst, const mem64_t& src);
void cmovnb(const reg64_t& dst, const mem64si_t& src);
void cmovnbe(const reg32_t& dst, const reg32_t& src);
void cmovnbe(const reg32_t& dst, const mem32_t& src);
void cmovnbe(const reg32_t& dst, const mem32si_t& src);
void cmovnbe(const reg64_t& dst, const reg64_t& src);
void cmovnbe(const reg64_t& dst, const mem64_t& src);
void cmovnbe(const reg64_t& dst, const mem64si_t& src);
void cmovnc(const reg32_t& dst, const reg32_t& src);
void cmovnc(const reg32_t& dst, const mem32_t& src);
void cmovnc(const reg32_t& dst, const mem32si_t& src);
void cmovnc(const reg64_t& dst, const reg64_t& src);
void cmovnc(const reg64_t& dst, const mem64_t& src);
void cmovnc(const reg64_t& dst, const mem64si_t& src);
void cmovne(const reg32_t& dst, const reg32_t& src);
void cmovne(const reg32_t& dst, const mem32_t& src);
void cmovne(const reg32_t& dst, const mem32si_t& src);
void cmovne(const reg64_t& dst, const reg64_t& src);
void cmovne(const reg64_t& dst, const mem64_t& src);
void cmovne(const reg64_t& dst, const mem64si_t& src);
void cmovng(const reg32_t& dst, const reg32_t& src);
void cmovng(const reg32_t& dst, const mem32_t& src);
void cmovng(const reg32_t& dst, const mem32si_t& src);
void cmovng(const reg64_t& dst, const reg64_t& src);
void cmovng(const reg64_t& dst, const mem64_t& src);
void cmovng(const reg64_t& dst, const mem64si_t& src);
void cmovnge(const reg32_t& dst, const reg32_t& src);
void cmovnge(const reg32_t& dst, const mem32_t& src);
void cmovnge(const reg32_t& dst, const mem32si_t& src);
void cmovnge(const reg64_t& dst, const reg64_t& src);
void cmovnge(const reg64_t& dst, const mem64_t& src);
void cmovnge(const reg64_t& dst, const mem64si_t& src);
void cmovnl(const reg32_t& dst, const reg32_t& src);
void cmovnl(const reg32_t& dst, const mem32_t& src);
void cmovnl(const reg32_t& dst, const mem32si_t& src);
void cmovnl(const reg64_t& dst, const reg64_t& src);
void cmovnl(const reg64_t& dst, const mem64_t& src);
void cmovnl(const reg64_t& dst, const mem64si_t& src);
void cmovnle(const reg32_t& dst, const reg32_t& src);
void cmovnle(const reg32_t& dst, const mem32_t& src);
void cmovnle(const reg32_t& dst, const mem32si_t& src);
void cmovnle(const reg64_t& dst, const reg64_t& src);
void cmovnle(const reg64_t& dst, const mem64_t& src);
void cmovnle(const reg64_t& dst, const mem64si_t& src);
void cmovno(const reg32_t& dst, const reg32_t& src);
void cmovno(const reg32_t& dst, const mem32_t& src);
void cmovno(const reg32_t& dst, const mem32si_t& src);
void cmovno(const reg64_t& dst, const reg64_t& src);
void cmovno(const reg64_t& dst, const mem64_t& src);
void cmovno(const reg64_t& dst, const mem64si_t& src);
void cmovnp(const reg32_t& dst, const reg32_t& src);
void cmovnp(const reg32_t& dst, const mem32_t& src);
void cmovnp(const reg32_t& dst, const mem32si_t& src);
void cmovnp(const reg64_t& dst, const reg64_t& src);
void cmovnp(const reg64_t& dst, const mem64_t& src);
void cmovnp(const reg64_t& dst, const mem64si_t& src);
void cmovns(const reg32_t& dst, const reg32_t& src);
void cmovns(const reg32_t& dst, const mem32_t& src);
void cmovns(const reg32_t& dst, const mem32si_t& src);
void cmovns(const reg64_t& dst, const reg64_t& src);
void cmovns(const reg64_t& dst, const mem64_t& src);
void cmovns(const reg64_t& dst, const mem64si_t& src);
void cmovnz(const reg32_t& dst, const reg32_t& src);
void cmovnz(const reg32_t& dst, const mem32_t& src);
void cmovnz(const reg32_t& dst, const mem32si_t& src);
void cmovnz(const reg64_t& dst, const reg64_t& src);
void cmovnz(const reg64_t& dst, const mem64_t& src);
void cmovnz(const reg64_t& dst, const mem64si_t& src);
void cmovo(const reg32_t& dst, const reg32_t& src);
void cmovo(const reg32_t& dst, const mem32_t& src);
void cmovo(const reg32_t& dst, const mem32si_t& src);
void cmovo(const reg64_t& dst, const reg64_t& src);
void cmovo(const reg64_t& dst, const mem64_t& src);
void cmovo(const reg64_t& dst, const mem64si_t& src);
void cmovp(const reg32_t& dst, const reg32_t& src);
void cmovp(const reg32_t& dst, const mem32_t& src);
void cmovp(const reg32_t& dst, const mem32si_t& src);
void cmovp(const reg64_t& dst, const reg64_t& src);
void cmovp(const reg64_t& dst, const mem64_t& src);
void cmovp(const reg64_t& dst, const mem64si_t& src);
void cmovpe(const reg32_t& dst, const reg32_t& src);
void cmovpe(const reg32_t& dst, const mem32_t& src);
void cmovpe(const reg32_t& dst, const mem32si_t& src);
void cmovpe(const reg64_t& dst, const reg64_t& src);
void cmovpe(const reg64_t& dst, const mem64_t& src);
void cmovpe(const reg64_t& dst, const mem64si_t& src);
void cmovpo(const reg32_t& dst, const reg32_t& src);
void cmovpo(const reg32_t& dst, const mem32_t& src);
void cmovpo(const reg32_t& dst, const mem32si_t& src);
void cmovpo(const reg64_t& dst, const reg64_t& src);
void cmovpo(const reg64_t& dst, const mem64_t& src);
void cmovpo(const reg64_t& dst, const mem64si_t& src);
void cmovs(const reg32_t& dst, const reg32_t& src);
void cmovs(const reg32_t& dst, const mem32_t& src);
void cmovs(const reg32_t& dst, const mem32si_t& src);
void cmovs(const reg64_t& dst, const reg64_t& src);
void cmovs(const reg64_t& dst, const mem64_t& src);
void cmovs(const reg64_t& dst, const mem64si_t& src);
void cmovz(const reg32_t& dst, const reg32_t& src);
void cmovz(const reg32_t& dst, const mem32_t& src);
void cmovz(const reg32_t& dst, const mem32si_t& src);
void cmovz(const reg64_t& dst, const reg64_t& src);
void cmovz(const reg64_t& dst, const mem64_t& src);
void cmovz(const reg64_t& dst, const mem64si_t& src);
void seta(const reg8_t& dst);
void seta(const mem8_t& dst);
void seta(const mem8si_t& dst);
void setae(const reg8_t& dst);
void setae(const mem8_t& dst);
void setae(const mem8si_t& dst);
void setb(const reg8_t& dst);
void setb(const mem8_t& dst);
void setb(const mem8si_t& dst);
void setbe(const reg8_t& dst);
void setbe(const mem8_t& dst);
void setbe(const mem8si_t& dst);
void setc(const reg8_t& dst);
void setc(const mem8_t& dst);
void setc(const mem8si_t& dst);
void sete(const reg8_t& dst);
void sete(const mem8_t& dst);
void sete(const mem8si_t& dst);
void setg(const reg8_t& dst);
void setg(const mem8_t& dst);
void setg(const mem8si_t& dst);
void setge(const reg8_t& dst);
void setge(const mem8_t& dst);
void setge(const mem8si_t& dst);
void setl(const reg8_t& dst);
void setl(const mem8_t& dst);
void setl(const mem8si_t& dst);
void setle(const reg8_t& dst);
void setle(const mem8_t& dst);
void setle(const mem8si_t& dst);
void setna(const reg8_t& dst);
void setna(const mem8_t& dst);
void setna(const mem8si_t& dst);
void setnae(const reg8_t& dst);
void setnae(const mem8_t& dst);
void setnae(const mem8si_t& dst);
void setnb(const reg8_t& dst);
void setnb(const mem8_t& dst);
void setnb(const mem8si_t& dst);
void setnbe(const reg8_t& dst);
void setnbe(const mem8_t& dst);
void setnbe(const mem8si_t& dst);
void setnc(const reg8_t& dst);
void setnc(const mem8_t& dst);
void setnc(const mem8si_t& dst);
void setne(const reg8_t& dst);
void setne(const mem8_t& dst);
void setne(const mem8si_t& dst);
void setng(const reg8_t& dst);
void setng(const mem8_t& dst);
void setng(const mem8si_t& dst);
void setnge(const reg8_t& dst);
void setnge(const mem8_t& dst);
void setnge(const mem8si_t& dst);
void setnl(const reg8_t& dst);
void setnl(const mem8_t& dst);
void setnl(const mem8si_t& dst);
void setnle(const reg8_t& dst);
void setnle(const mem8_t& dst);
void setnle(const mem8si_t& dst);
void setno(const reg8_t& dst);
void setno(const mem8_t& dst);
void setno(const mem8si_t& dst);
void setnp(const reg8_t& dst);
void setnp(const mem8_t& dst);
void setnp(const mem8si_t& dst);
void setns(const reg8_t& dst);
void setns(const mem8_t& dst);
void setns(const mem8si_t& dst);
void setnz(const reg8_t& dst);
void setnz(const mem8_t& dst);
void setnz(const mem8si_t& dst);
void seto(const reg8_t& dst);
void seto(const mem8_t& dst);
void seto(const mem8si_t& dst);
void setp(const reg8_t& dst);
void setp(const mem8_t& dst);
void setp(const mem8si_t& dst);
void setpe(const reg8_t& dst);
void setpe(const mem8_t& dst);
void setpe(const mem8si_t& dst);
void setpo(const reg8_t& dst);
void setpo(const mem8_t& dst);
void setpo(const mem8si_t& dst);
void sets(const reg8_t& dst);
void sets(const mem8_t& dst);
void sets(const mem8si_t& dst);
void setz(const reg8_t& dst);
void setz(const mem8_t& dst);
void setz(const mem8si_t& dst);
void test(const reg8_t& dst, const reg8_t& src);
void test(const mem8_t& dst, const reg8_t& src);
void test(const mem8si_t& dst, const reg8_t& src);
void test(const reg8_t& dst, int8_t imm8);
void test(const mem8_t& dst, int8_t imm8);
void test(const mem8si_t& dst, int8_t imm8);
void test(const reg32_t& dst, const reg32_t& src);
void test(const mem32_t& dst, const reg32_t& src);
void test(const mem32si_t& dst, const reg32_t& src);
void test(const reg32_t& dst, int32_t imm32);
void test(const mem32_t& dst, int32_t imm32);
void test(const mem32si_t& dst, int32_t imm32);
void test(const reg64_t& dst, const reg64_t& src);
void test(const mem64_t& dst, const reg64_t& src);
void test(const mem64si_t& dst, const reg64_t& src);
void test(const reg64_t& dst, int32_t imm32);
void test(const mem64_t& dst, int32_t imm32);
void test(const mem64si_t& dst, int32_t imm32);
void mov(const reg8_t& dst, const reg8_t& src);
void mov(const reg32_t& dst, const reg32_t& src);
void mov(const reg64_t& dst, const reg64_t& src);
void mov(const mem8_t& dst, const reg8_t& src);
void mov(const mem8si_t& dst, const reg8_t& src);
void mov(const mem32_t& dst, const reg32_t& src);
void mov(const mem32si_t& dst, const reg32_t& src);
void mov(const mem64_t& dst, const reg64_t& src);
void mov(const mem64si_t& dst, const reg64_t& src);
void mov(const reg8_t& dst, const mem8_t& src);
void mov(const reg8_t& dst, const mem8si_t& src);
void mov(const reg32_t& dst, const mem32_t& src);
void mov(const reg32_t& dst, const mem32si_t& src);
void mov(const reg64_t& dst, const mem64_t& src);
void mov(const reg64_t& dst, const mem64si_t& src);
void mov(const reg8_t& dst, int8_t imm8);
void mov(const reg32_t& dst, int32_t imm32);
void mov(const reg64_t& dst, int64_t imm64);
void mov(const mem8_t& dst, int8_t imm8);
void mov(const mem8si_t& dst, int8_t imm8);
void mov(const mem32_t& dst, int32_t imm32);
void mov(const mem32si_t& dst, int32_t imm32);
void mov(const mem64_t& dst, int32_t imm32);
void mov(const mem64si_t& dst, int32_t imm32);
#if ARCH_LP64
void mov(const reg64_t& dst, const symbol_t& target);
#else
void mov(const reg32_t& dst, const symbol_t& target);
#endif
void movzx(const reg32_t& dst, const reg8_t& src);
void movzx(const reg32_t& dst, const mem8_t& src);
void movzx(const reg32_t& dst, const mem8si_t& src);
void movzx(const reg64_t& dst, const reg8_t& src);
void movzx(const reg64_t& dst, const mem8_t& src);
void movzx(const reg64_t& dst, const mem8si_t& src);
void movsx(const reg32_t& dst, const reg8_t& src);
void movsx(const reg32_t& dst, const mem8_t& src);
void movsx(const reg32_t& dst, const mem8si_t& src);
void movsx(const reg64_t& dst, const reg8_t& src);
void movsx(const reg64_t& dst, const mem8_t& src);
void movsx(const reg64_t& dst, const mem8si_t& src);
void movsxd(const reg64_t& dst, const reg32_t& src);
void movsxd(const reg64_t& dst, const mem32_t& src);
void movsxd(const reg64_t& dst, const mem32si_t& src);
#if ARCH_LP64
void lea(const reg64_t& dst, const mem8_t& src);
void lea(const reg64_t& dst, const mem8si_t& src);
void lea(const reg64_t& dst, const mem32_t& src);
void lea(const reg64_t& dst, const mem32si_t& src);
void lea(const reg64_t& dst, const mem64_t& src);
void lea(const reg64_t& dst, const mem64si_t& src);
void lea(const reg64_t& dst, const symbol_t& target);
#else
void lea(const reg32_t& dst, const mem8_t& src);
void lea(const reg32_t& dst, const mem8si_t& src);
void lea(const reg32_t& dst, const mem32_t& src);
void lea(const reg32_t& dst, const mem32si_t& src);
void lea(const reg32_t& dst, const mem64_t& src);
void lea(const reg32_t& dst, const mem64si_t& src);
void lea(const reg32_t& dst, const symbol_t& target);
#endif
#if ARCH_LP64
void push(const reg64_t& src);
void push(const mem64_t& src);
void push(const mem64si_t& src);
void pop(const reg64_t& dst);
void pop(const mem64_t& dst);
void pop(const mem64si_t& dst);
#else
void push(const reg32_t& src);
void push(const mem32_t& src);
void push(const mem32si_t& src);
void pop(const reg32_t& dst);
void pop(const mem32_t& dst);
void pop(const mem32si_t& dst);
#endif
void push(int32_t imm32);
void jmp_short(const symbol_t& target);
void jmp(const symbol_t& target);
#if ARCH_LP64
void jmp(const reg64_t& dst);
void jmp(const mem64_t& dst);
void jmp(const mem64si_t& dst);
#else
void jmp(const reg32_t& dst);
void jmp(const mem32_t& dst);
void jmp(const mem32si_t& dst);
#endif
void call(const symbol_t& target);
#if ARCH_LP64
void call(const reg64_t& dst);
void call(const mem64_t& dst);
void call(const mem64si_t& dst);
#else
void call(const reg32_t& dst);
void call(const mem32_t& dst);
void call(const mem32si_t& dst);
#endif
void ret();
